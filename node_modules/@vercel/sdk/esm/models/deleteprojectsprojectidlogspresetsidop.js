/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
/** @internal */
export const DeleteProjectsProjectIdLogsPresetsIdRequest$inboundSchema = z.object({
    projectId: z.string(),
    id: z.string(),
});
/** @internal */
export const DeleteProjectsProjectIdLogsPresetsIdRequest$outboundSchema = z.object({
    projectId: z.string(),
    id: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var DeleteProjectsProjectIdLogsPresetsIdRequest$;
(function (DeleteProjectsProjectIdLogsPresetsIdRequest$) {
    /** @deprecated use `DeleteProjectsProjectIdLogsPresetsIdRequest$inboundSchema` instead. */
    DeleteProjectsProjectIdLogsPresetsIdRequest$.inboundSchema = DeleteProjectsProjectIdLogsPresetsIdRequest$inboundSchema;
    /** @deprecated use `DeleteProjectsProjectIdLogsPresetsIdRequest$outboundSchema` instead. */
    DeleteProjectsProjectIdLogsPresetsIdRequest$.outboundSchema = DeleteProjectsProjectIdLogsPresetsIdRequest$outboundSchema;
})(DeleteProjectsProjectIdLogsPresetsIdRequest$ || (DeleteProjectsProjectIdLogsPresetsIdRequest$ = {}));
export function deleteProjectsProjectIdLogsPresetsIdRequestToJSON(deleteProjectsProjectIdLogsPresetsIdRequest) {
    return JSON.stringify(DeleteProjectsProjectIdLogsPresetsIdRequest$outboundSchema.parse(deleteProjectsProjectIdLogsPresetsIdRequest));
}
export function deleteProjectsProjectIdLogsPresetsIdRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => DeleteProjectsProjectIdLogsPresetsIdRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DeleteProjectsProjectIdLogsPresetsIdRequest' from JSON`);
}
//# sourceMappingURL=deleteprojectsprojectidlogspresetsidop.js.map