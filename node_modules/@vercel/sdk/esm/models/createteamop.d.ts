import * as z from "zod";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";
export type Utm = {
    /**
     * UTM source
     */
    utmSource?: string | undefined;
    /**
     * UTM medium
     */
    utmMedium?: string | undefined;
    /**
     * UTM campaign
     */
    utmCampaign?: string | undefined;
    /**
     * UTM term
     */
    utmTerm?: string | undefined;
};
/**
 * Attribution information for the session or current page
 */
export type Attribution = {
    /**
     * Session referrer
     */
    sessionReferrer?: string | undefined;
    /**
     * Session landing page
     */
    landingPage?: string | undefined;
    /**
     * Referrer to the signup page
     */
    pageBeforeConversionPage?: string | undefined;
    utm?: Utm | undefined;
};
export type CreateTeamRequestBody = {
    /**
     * The desired slug for the Team
     */
    slug: string;
    /**
     * The desired name for the Team. It will be generated from the provided slug if nothing is provided
     */
    name?: string | undefined;
    /**
     * Attribution information for the session or current page
     */
    attribution?: Attribution | undefined;
};
/**
 * IMPORTANT: If extending Billing, particularly with optional fields, make sure you also update `sync-orb-subscription-to-owner.ts` to handle the items when the object is recreated.
 */
export type CreateTeamBilling = {};
/**
 * The team was created successfully
 */
export type CreateTeamResponseBody = {
    /**
     * Id of the created team
     */
    id: string;
    slug: string;
    /**
     * IMPORTANT: If extending Billing, particularly with optional fields, make sure you also update `sync-orb-subscription-to-owner.ts` to handle the items when the object is recreated.
     */
    billing: CreateTeamBilling;
};
/** @internal */
export declare const Utm$inboundSchema: z.ZodType<Utm, z.ZodTypeDef, unknown>;
/** @internal */
export type Utm$Outbound = {
    utmSource?: string | undefined;
    utmMedium?: string | undefined;
    utmCampaign?: string | undefined;
    utmTerm?: string | undefined;
};
/** @internal */
export declare const Utm$outboundSchema: z.ZodType<Utm$Outbound, z.ZodTypeDef, Utm>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Utm$ {
    /** @deprecated use `Utm$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Utm, z.ZodTypeDef, unknown>;
    /** @deprecated use `Utm$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Utm$Outbound, z.ZodTypeDef, Utm>;
    /** @deprecated use `Utm$Outbound` instead. */
    type Outbound = Utm$Outbound;
}
export declare function utmToJSON(utm: Utm): string;
export declare function utmFromJSON(jsonString: string): SafeParseResult<Utm, SDKValidationError>;
/** @internal */
export declare const Attribution$inboundSchema: z.ZodType<Attribution, z.ZodTypeDef, unknown>;
/** @internal */
export type Attribution$Outbound = {
    sessionReferrer?: string | undefined;
    landingPage?: string | undefined;
    pageBeforeConversionPage?: string | undefined;
    utm?: Utm$Outbound | undefined;
};
/** @internal */
export declare const Attribution$outboundSchema: z.ZodType<Attribution$Outbound, z.ZodTypeDef, Attribution>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Attribution$ {
    /** @deprecated use `Attribution$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Attribution, z.ZodTypeDef, unknown>;
    /** @deprecated use `Attribution$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Attribution$Outbound, z.ZodTypeDef, Attribution>;
    /** @deprecated use `Attribution$Outbound` instead. */
    type Outbound = Attribution$Outbound;
}
export declare function attributionToJSON(attribution: Attribution): string;
export declare function attributionFromJSON(jsonString: string): SafeParseResult<Attribution, SDKValidationError>;
/** @internal */
export declare const CreateTeamRequestBody$inboundSchema: z.ZodType<CreateTeamRequestBody, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateTeamRequestBody$Outbound = {
    slug: string;
    name?: string | undefined;
    attribution?: Attribution$Outbound | undefined;
};
/** @internal */
export declare const CreateTeamRequestBody$outboundSchema: z.ZodType<CreateTeamRequestBody$Outbound, z.ZodTypeDef, CreateTeamRequestBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateTeamRequestBody$ {
    /** @deprecated use `CreateTeamRequestBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateTeamRequestBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateTeamRequestBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateTeamRequestBody$Outbound, z.ZodTypeDef, CreateTeamRequestBody>;
    /** @deprecated use `CreateTeamRequestBody$Outbound` instead. */
    type Outbound = CreateTeamRequestBody$Outbound;
}
export declare function createTeamRequestBodyToJSON(createTeamRequestBody: CreateTeamRequestBody): string;
export declare function createTeamRequestBodyFromJSON(jsonString: string): SafeParseResult<CreateTeamRequestBody, SDKValidationError>;
/** @internal */
export declare const CreateTeamBilling$inboundSchema: z.ZodType<CreateTeamBilling, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateTeamBilling$Outbound = {};
/** @internal */
export declare const CreateTeamBilling$outboundSchema: z.ZodType<CreateTeamBilling$Outbound, z.ZodTypeDef, CreateTeamBilling>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateTeamBilling$ {
    /** @deprecated use `CreateTeamBilling$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateTeamBilling, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateTeamBilling$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateTeamBilling$Outbound, z.ZodTypeDef, CreateTeamBilling>;
    /** @deprecated use `CreateTeamBilling$Outbound` instead. */
    type Outbound = CreateTeamBilling$Outbound;
}
export declare function createTeamBillingToJSON(createTeamBilling: CreateTeamBilling): string;
export declare function createTeamBillingFromJSON(jsonString: string): SafeParseResult<CreateTeamBilling, SDKValidationError>;
/** @internal */
export declare const CreateTeamResponseBody$inboundSchema: z.ZodType<CreateTeamResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateTeamResponseBody$Outbound = {
    id: string;
    slug: string;
    billing: CreateTeamBilling$Outbound;
};
/** @internal */
export declare const CreateTeamResponseBody$outboundSchema: z.ZodType<CreateTeamResponseBody$Outbound, z.ZodTypeDef, CreateTeamResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateTeamResponseBody$ {
    /** @deprecated use `CreateTeamResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateTeamResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateTeamResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateTeamResponseBody$Outbound, z.ZodTypeDef, CreateTeamResponseBody>;
    /** @deprecated use `CreateTeamResponseBody$Outbound` instead. */
    type Outbound = CreateTeamResponseBody$Outbound;
}
export declare function createTeamResponseBodyToJSON(createTeamResponseBody: CreateTeamResponseBody): string;
export declare function createTeamResponseBodyFromJSON(jsonString: string): SafeParseResult<CreateTeamResponseBody, SDKValidationError>;
//# sourceMappingURL=createteamop.d.ts.map