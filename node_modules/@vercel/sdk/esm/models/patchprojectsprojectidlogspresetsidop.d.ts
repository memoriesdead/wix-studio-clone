import * as z from "zod";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";
export type PatchProjectsProjectIdLogsPresetsIdRequestBody = {
    /**
     * The title of the preset
     */
    title: string;
};
export type PatchProjectsProjectIdLogsPresetsIdRequest = {
    /**
     * projectId of the preset
     */
    projectId: string;
    /**
     * Id of the preset
     */
    id: string;
    requestBody?: PatchProjectsProjectIdLogsPresetsIdRequestBody | undefined;
};
/** @internal */
export declare const PatchProjectsProjectIdLogsPresetsIdRequestBody$inboundSchema: z.ZodType<PatchProjectsProjectIdLogsPresetsIdRequestBody, z.ZodTypeDef, unknown>;
/** @internal */
export type PatchProjectsProjectIdLogsPresetsIdRequestBody$Outbound = {
    title: string;
};
/** @internal */
export declare const PatchProjectsProjectIdLogsPresetsIdRequestBody$outboundSchema: z.ZodType<PatchProjectsProjectIdLogsPresetsIdRequestBody$Outbound, z.ZodTypeDef, PatchProjectsProjectIdLogsPresetsIdRequestBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PatchProjectsProjectIdLogsPresetsIdRequestBody$ {
    /** @deprecated use `PatchProjectsProjectIdLogsPresetsIdRequestBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PatchProjectsProjectIdLogsPresetsIdRequestBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `PatchProjectsProjectIdLogsPresetsIdRequestBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PatchProjectsProjectIdLogsPresetsIdRequestBody$Outbound, z.ZodTypeDef, PatchProjectsProjectIdLogsPresetsIdRequestBody>;
    /** @deprecated use `PatchProjectsProjectIdLogsPresetsIdRequestBody$Outbound` instead. */
    type Outbound = PatchProjectsProjectIdLogsPresetsIdRequestBody$Outbound;
}
export declare function patchProjectsProjectIdLogsPresetsIdRequestBodyToJSON(patchProjectsProjectIdLogsPresetsIdRequestBody: PatchProjectsProjectIdLogsPresetsIdRequestBody): string;
export declare function patchProjectsProjectIdLogsPresetsIdRequestBodyFromJSON(jsonString: string): SafeParseResult<PatchProjectsProjectIdLogsPresetsIdRequestBody, SDKValidationError>;
/** @internal */
export declare const PatchProjectsProjectIdLogsPresetsIdRequest$inboundSchema: z.ZodType<PatchProjectsProjectIdLogsPresetsIdRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type PatchProjectsProjectIdLogsPresetsIdRequest$Outbound = {
    projectId: string;
    id: string;
    RequestBody?: PatchProjectsProjectIdLogsPresetsIdRequestBody$Outbound | undefined;
};
/** @internal */
export declare const PatchProjectsProjectIdLogsPresetsIdRequest$outboundSchema: z.ZodType<PatchProjectsProjectIdLogsPresetsIdRequest$Outbound, z.ZodTypeDef, PatchProjectsProjectIdLogsPresetsIdRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PatchProjectsProjectIdLogsPresetsIdRequest$ {
    /** @deprecated use `PatchProjectsProjectIdLogsPresetsIdRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PatchProjectsProjectIdLogsPresetsIdRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `PatchProjectsProjectIdLogsPresetsIdRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PatchProjectsProjectIdLogsPresetsIdRequest$Outbound, z.ZodTypeDef, PatchProjectsProjectIdLogsPresetsIdRequest>;
    /** @deprecated use `PatchProjectsProjectIdLogsPresetsIdRequest$Outbound` instead. */
    type Outbound = PatchProjectsProjectIdLogsPresetsIdRequest$Outbound;
}
export declare function patchProjectsProjectIdLogsPresetsIdRequestToJSON(patchProjectsProjectIdLogsPresetsIdRequest: PatchProjectsProjectIdLogsPresetsIdRequest): string;
export declare function patchProjectsProjectIdLogsPresetsIdRequestFromJSON(jsonString: string): SafeParseResult<PatchProjectsProjectIdLogsPresetsIdRequest, SDKValidationError>;
//# sourceMappingURL=patchprojectsprojectidlogspresetsidop.d.ts.map