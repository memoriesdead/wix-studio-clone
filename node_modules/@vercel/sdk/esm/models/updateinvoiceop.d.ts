import * as z from "zod";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";
export declare const UpdateInvoiceAction: {
    readonly Refund: "refund";
};
export type UpdateInvoiceAction = ClosedEnum<typeof UpdateInvoiceAction>;
export type UpdateInvoiceRequestBody = {
    action: UpdateInvoiceAction;
    /**
     * Refund reason.
     */
    reason: string;
    /**
     * The total amount to be refunded. Must be less than or equal to the total amount of the invoice.
     */
    total: string;
};
export type UpdateInvoiceRequest = {
    integrationConfigurationId: string;
    invoiceId: string;
    requestBody: UpdateInvoiceRequestBody;
};
/** @internal */
export declare const UpdateInvoiceAction$inboundSchema: z.ZodNativeEnum<typeof UpdateInvoiceAction>;
/** @internal */
export declare const UpdateInvoiceAction$outboundSchema: z.ZodNativeEnum<typeof UpdateInvoiceAction>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UpdateInvoiceAction$ {
    /** @deprecated use `UpdateInvoiceAction$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Refund: "refund";
    }>;
    /** @deprecated use `UpdateInvoiceAction$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Refund: "refund";
    }>;
}
/** @internal */
export declare const UpdateInvoiceRequestBody$inboundSchema: z.ZodType<UpdateInvoiceRequestBody, z.ZodTypeDef, unknown>;
/** @internal */
export type UpdateInvoiceRequestBody$Outbound = {
    action: string;
    reason: string;
    total: string;
};
/** @internal */
export declare const UpdateInvoiceRequestBody$outboundSchema: z.ZodType<UpdateInvoiceRequestBody$Outbound, z.ZodTypeDef, UpdateInvoiceRequestBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UpdateInvoiceRequestBody$ {
    /** @deprecated use `UpdateInvoiceRequestBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UpdateInvoiceRequestBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `UpdateInvoiceRequestBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UpdateInvoiceRequestBody$Outbound, z.ZodTypeDef, UpdateInvoiceRequestBody>;
    /** @deprecated use `UpdateInvoiceRequestBody$Outbound` instead. */
    type Outbound = UpdateInvoiceRequestBody$Outbound;
}
export declare function updateInvoiceRequestBodyToJSON(updateInvoiceRequestBody: UpdateInvoiceRequestBody): string;
export declare function updateInvoiceRequestBodyFromJSON(jsonString: string): SafeParseResult<UpdateInvoiceRequestBody, SDKValidationError>;
/** @internal */
export declare const UpdateInvoiceRequest$inboundSchema: z.ZodType<UpdateInvoiceRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type UpdateInvoiceRequest$Outbound = {
    integrationConfigurationId: string;
    invoiceId: string;
    RequestBody: UpdateInvoiceRequestBody$Outbound;
};
/** @internal */
export declare const UpdateInvoiceRequest$outboundSchema: z.ZodType<UpdateInvoiceRequest$Outbound, z.ZodTypeDef, UpdateInvoiceRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UpdateInvoiceRequest$ {
    /** @deprecated use `UpdateInvoiceRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UpdateInvoiceRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `UpdateInvoiceRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UpdateInvoiceRequest$Outbound, z.ZodTypeDef, UpdateInvoiceRequest>;
    /** @deprecated use `UpdateInvoiceRequest$Outbound` instead. */
    type Outbound = UpdateInvoiceRequest$Outbound;
}
export declare function updateInvoiceRequestToJSON(updateInvoiceRequest: UpdateInvoiceRequest): string;
export declare function updateInvoiceRequestFromJSON(jsonString: string): SafeParseResult<UpdateInvoiceRequest, SDKValidationError>;
//# sourceMappingURL=updateinvoiceop.d.ts.map