/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../lib/primitives.js";
import { safeParse } from "../lib/schemas.js";
/** @internal */
export const PatchProjectsProjectIdLogsPresetsIdRequestBody$inboundSchema = z.object({
    title: z.string(),
});
/** @internal */
export const PatchProjectsProjectIdLogsPresetsIdRequestBody$outboundSchema = z.object({
    title: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var PatchProjectsProjectIdLogsPresetsIdRequestBody$;
(function (PatchProjectsProjectIdLogsPresetsIdRequestBody$) {
    /** @deprecated use `PatchProjectsProjectIdLogsPresetsIdRequestBody$inboundSchema` instead. */
    PatchProjectsProjectIdLogsPresetsIdRequestBody$.inboundSchema = PatchProjectsProjectIdLogsPresetsIdRequestBody$inboundSchema;
    /** @deprecated use `PatchProjectsProjectIdLogsPresetsIdRequestBody$outboundSchema` instead. */
    PatchProjectsProjectIdLogsPresetsIdRequestBody$.outboundSchema = PatchProjectsProjectIdLogsPresetsIdRequestBody$outboundSchema;
})(PatchProjectsProjectIdLogsPresetsIdRequestBody$ || (PatchProjectsProjectIdLogsPresetsIdRequestBody$ = {}));
export function patchProjectsProjectIdLogsPresetsIdRequestBodyToJSON(patchProjectsProjectIdLogsPresetsIdRequestBody) {
    return JSON.stringify(PatchProjectsProjectIdLogsPresetsIdRequestBody$outboundSchema.parse(patchProjectsProjectIdLogsPresetsIdRequestBody));
}
export function patchProjectsProjectIdLogsPresetsIdRequestBodyFromJSON(jsonString) {
    return safeParse(jsonString, (x) => PatchProjectsProjectIdLogsPresetsIdRequestBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'PatchProjectsProjectIdLogsPresetsIdRequestBody' from JSON`);
}
/** @internal */
export const PatchProjectsProjectIdLogsPresetsIdRequest$inboundSchema = z.object({
    projectId: z.string(),
    id: z.string(),
    RequestBody: z.lazy(() => PatchProjectsProjectIdLogsPresetsIdRequestBody$inboundSchema).optional(),
}).transform((v) => {
    return remap$(v, {
        "RequestBody": "requestBody",
    });
});
/** @internal */
export const PatchProjectsProjectIdLogsPresetsIdRequest$outboundSchema = z.object({
    projectId: z.string(),
    id: z.string(),
    requestBody: z.lazy(() => PatchProjectsProjectIdLogsPresetsIdRequestBody$outboundSchema).optional(),
}).transform((v) => {
    return remap$(v, {
        requestBody: "RequestBody",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var PatchProjectsProjectIdLogsPresetsIdRequest$;
(function (PatchProjectsProjectIdLogsPresetsIdRequest$) {
    /** @deprecated use `PatchProjectsProjectIdLogsPresetsIdRequest$inboundSchema` instead. */
    PatchProjectsProjectIdLogsPresetsIdRequest$.inboundSchema = PatchProjectsProjectIdLogsPresetsIdRequest$inboundSchema;
    /** @deprecated use `PatchProjectsProjectIdLogsPresetsIdRequest$outboundSchema` instead. */
    PatchProjectsProjectIdLogsPresetsIdRequest$.outboundSchema = PatchProjectsProjectIdLogsPresetsIdRequest$outboundSchema;
})(PatchProjectsProjectIdLogsPresetsIdRequest$ || (PatchProjectsProjectIdLogsPresetsIdRequest$ = {}));
export function patchProjectsProjectIdLogsPresetsIdRequestToJSON(patchProjectsProjectIdLogsPresetsIdRequest) {
    return JSON.stringify(PatchProjectsProjectIdLogsPresetsIdRequest$outboundSchema.parse(patchProjectsProjectIdLogsPresetsIdRequest));
}
export function patchProjectsProjectIdLogsPresetsIdRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => PatchProjectsProjectIdLogsPresetsIdRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'PatchProjectsProjectIdLogsPresetsIdRequest' from JSON`);
}
//# sourceMappingURL=patchprojectsprojectidlogspresetsidop.js.map