import * as z from "zod";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";
export type Data = {
    query: string;
    creatorId: string;
    title: string;
    groupId: string;
    ownerId: string;
    projectId: string;
    createdAt: number;
};
/**
 * Data representing a Team.
 */
export type Team = {
    /**
     * The Preset's unique identifier.
     */
    id: string;
    data: Data;
    additionalProperties?: {
        [k: string]: any;
    };
};
/** @internal */
export declare const Data$inboundSchema: z.ZodType<Data, z.ZodTypeDef, unknown>;
/** @internal */
export type Data$Outbound = {
    query: string;
    creatorId: string;
    title: string;
    groupId: string;
    ownerId: string;
    projectId: string;
    createdAt: number;
};
/** @internal */
export declare const Data$outboundSchema: z.ZodType<Data$Outbound, z.ZodTypeDef, Data>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Data$ {
    /** @deprecated use `Data$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Data, z.ZodTypeDef, unknown>;
    /** @deprecated use `Data$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Data$Outbound, z.ZodTypeDef, Data>;
    /** @deprecated use `Data$Outbound` instead. */
    type Outbound = Data$Outbound;
}
export declare function dataToJSON(data: Data): string;
export declare function dataFromJSON(jsonString: string): SafeParseResult<Data, SDKValidationError>;
/** @internal */
export declare const Team$inboundSchema: z.ZodType<Team, z.ZodTypeDef, unknown>;
/** @internal */
export type Team$Outbound = {
    id: string;
    data: Data$Outbound;
    [additionalProperties: string]: unknown;
};
/** @internal */
export declare const Team$outboundSchema: z.ZodType<Team$Outbound, z.ZodTypeDef, Team>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Team$ {
    /** @deprecated use `Team$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Team, z.ZodTypeDef, unknown>;
    /** @deprecated use `Team$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Team$Outbound, z.ZodTypeDef, Team>;
    /** @deprecated use `Team$Outbound` instead. */
    type Outbound = Team$Outbound;
}
export declare function teamToJSON(team: Team): string;
export declare function teamFromJSON(jsonString: string): SafeParseResult<Team, SDKValidationError>;
//# sourceMappingURL=team.d.ts.map