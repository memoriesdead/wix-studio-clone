/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../lib/primitives.js";
import { safeParse } from "../lib/schemas.js";
export const PostProjectsProjectIdLogsPresetsGroup = {
    Personal: "personal",
    Team: "team",
};
/** @internal */
export const PostProjectsProjectIdLogsPresetsGroup$inboundSchema = z.nativeEnum(PostProjectsProjectIdLogsPresetsGroup);
/** @internal */
export const PostProjectsProjectIdLogsPresetsGroup$outboundSchema = PostProjectsProjectIdLogsPresetsGroup$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var PostProjectsProjectIdLogsPresetsGroup$;
(function (PostProjectsProjectIdLogsPresetsGroup$) {
    /** @deprecated use `PostProjectsProjectIdLogsPresetsGroup$inboundSchema` instead. */
    PostProjectsProjectIdLogsPresetsGroup$.inboundSchema = PostProjectsProjectIdLogsPresetsGroup$inboundSchema;
    /** @deprecated use `PostProjectsProjectIdLogsPresetsGroup$outboundSchema` instead. */
    PostProjectsProjectIdLogsPresetsGroup$.outboundSchema = PostProjectsProjectIdLogsPresetsGroup$outboundSchema;
})(PostProjectsProjectIdLogsPresetsGroup$ || (PostProjectsProjectIdLogsPresetsGroup$ = {}));
/** @internal */
export const PostProjectsProjectIdLogsPresetsRequestBody$inboundSchema = z.object({
    query: z.string(),
    title: z.string(),
    group: PostProjectsProjectIdLogsPresetsGroup$inboundSchema,
});
/** @internal */
export const PostProjectsProjectIdLogsPresetsRequestBody$outboundSchema = z.object({
    query: z.string(),
    title: z.string(),
    group: PostProjectsProjectIdLogsPresetsGroup$outboundSchema,
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var PostProjectsProjectIdLogsPresetsRequestBody$;
(function (PostProjectsProjectIdLogsPresetsRequestBody$) {
    /** @deprecated use `PostProjectsProjectIdLogsPresetsRequestBody$inboundSchema` instead. */
    PostProjectsProjectIdLogsPresetsRequestBody$.inboundSchema = PostProjectsProjectIdLogsPresetsRequestBody$inboundSchema;
    /** @deprecated use `PostProjectsProjectIdLogsPresetsRequestBody$outboundSchema` instead. */
    PostProjectsProjectIdLogsPresetsRequestBody$.outboundSchema = PostProjectsProjectIdLogsPresetsRequestBody$outboundSchema;
})(PostProjectsProjectIdLogsPresetsRequestBody$ || (PostProjectsProjectIdLogsPresetsRequestBody$ = {}));
export function postProjectsProjectIdLogsPresetsRequestBodyToJSON(postProjectsProjectIdLogsPresetsRequestBody) {
    return JSON.stringify(PostProjectsProjectIdLogsPresetsRequestBody$outboundSchema.parse(postProjectsProjectIdLogsPresetsRequestBody));
}
export function postProjectsProjectIdLogsPresetsRequestBodyFromJSON(jsonString) {
    return safeParse(jsonString, (x) => PostProjectsProjectIdLogsPresetsRequestBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'PostProjectsProjectIdLogsPresetsRequestBody' from JSON`);
}
/** @internal */
export const PostProjectsProjectIdLogsPresetsRequest$inboundSchema = z.object({
    projectId: z.string(),
    RequestBody: z.lazy(() => PostProjectsProjectIdLogsPresetsRequestBody$inboundSchema).optional(),
}).transform((v) => {
    return remap$(v, {
        "RequestBody": "requestBody",
    });
});
/** @internal */
export const PostProjectsProjectIdLogsPresetsRequest$outboundSchema = z.object({
    projectId: z.string(),
    requestBody: z.lazy(() => PostProjectsProjectIdLogsPresetsRequestBody$outboundSchema).optional(),
}).transform((v) => {
    return remap$(v, {
        requestBody: "RequestBody",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var PostProjectsProjectIdLogsPresetsRequest$;
(function (PostProjectsProjectIdLogsPresetsRequest$) {
    /** @deprecated use `PostProjectsProjectIdLogsPresetsRequest$inboundSchema` instead. */
    PostProjectsProjectIdLogsPresetsRequest$.inboundSchema = PostProjectsProjectIdLogsPresetsRequest$inboundSchema;
    /** @deprecated use `PostProjectsProjectIdLogsPresetsRequest$outboundSchema` instead. */
    PostProjectsProjectIdLogsPresetsRequest$.outboundSchema = PostProjectsProjectIdLogsPresetsRequest$outboundSchema;
})(PostProjectsProjectIdLogsPresetsRequest$ || (PostProjectsProjectIdLogsPresetsRequest$ = {}));
export function postProjectsProjectIdLogsPresetsRequestToJSON(postProjectsProjectIdLogsPresetsRequest) {
    return JSON.stringify(PostProjectsProjectIdLogsPresetsRequest$outboundSchema.parse(postProjectsProjectIdLogsPresetsRequest));
}
export function postProjectsProjectIdLogsPresetsRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => PostProjectsProjectIdLogsPresetsRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'PostProjectsProjectIdLogsPresetsRequest' from JSON`);
}
//# sourceMappingURL=postprojectsprojectidlogspresetsop.js.map