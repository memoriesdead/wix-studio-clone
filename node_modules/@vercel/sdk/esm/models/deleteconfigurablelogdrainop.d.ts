import * as z from "zod";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";
export type DeleteConfigurableLogDrainRequest = {
    id: string;
    /**
     * The Team identifier to perform the request on behalf of.
     */
    teamId?: string | undefined;
    /**
     * The Team slug to perform the request on behalf of.
     */
    slug?: string | undefined;
};
/** @internal */
export declare const DeleteConfigurableLogDrainRequest$inboundSchema: z.ZodType<DeleteConfigurableLogDrainRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type DeleteConfigurableLogDrainRequest$Outbound = {
    id: string;
    teamId?: string | undefined;
    slug?: string | undefined;
};
/** @internal */
export declare const DeleteConfigurableLogDrainRequest$outboundSchema: z.ZodType<DeleteConfigurableLogDrainRequest$Outbound, z.ZodTypeDef, DeleteConfigurableLogDrainRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace DeleteConfigurableLogDrainRequest$ {
    /** @deprecated use `DeleteConfigurableLogDrainRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<DeleteConfigurableLogDrainRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `DeleteConfigurableLogDrainRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<DeleteConfigurableLogDrainRequest$Outbound, z.ZodTypeDef, DeleteConfigurableLogDrainRequest>;
    /** @deprecated use `DeleteConfigurableLogDrainRequest$Outbound` instead. */
    type Outbound = DeleteConfigurableLogDrainRequest$Outbound;
}
export declare function deleteConfigurableLogDrainRequestToJSON(deleteConfigurableLogDrainRequest: DeleteConfigurableLogDrainRequest): string;
export declare function deleteConfigurableLogDrainRequestFromJSON(jsonString: string): SafeParseResult<DeleteConfigurableLogDrainRequest, SDKValidationError>;
//# sourceMappingURL=deleteconfigurablelogdrainop.d.ts.map