import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import { DeleteConfigurationRequest } from "../models/deleteconfigurationop.js";
import { GetConfigurationRequest, GetConfigurationResponseBody } from "../models/getconfigurationop.js";
import { GetConfigurationsRequest, GetConfigurationsResponseBody } from "../models/getconfigurationsop.js";
import { UpdateIntegrationDeploymentActionRequest } from "../models/updateintegrationdeploymentactionop.js";
export declare class Integrations extends ClientSDK {
    /**
     * Update deployment integration action
     *
     * @remarks
     * Updates the deployment integration action for the specified integration installation
     */
    updateIntegrationDeploymentAction(request: UpdateIntegrationDeploymentActionRequest, options?: RequestOptions): Promise<void>;
    /**
     * Get configurations for the authenticated user or team
     *
     * @remarks
     * Allows to retrieve all configurations for an authenticated integration. When the `project` view is used, configurations generated for the authorization flow will be filtered out of the results.
     */
    getConfigurations(request: GetConfigurationsRequest, options?: RequestOptions): Promise<GetConfigurationsResponseBody>;
    /**
     * Retrieve an integration configuration
     *
     * @remarks
     * Allows to retrieve a the configuration with the provided id in case it exists. The authenticated user or team must be the owner of the config in order to access it.
     */
    getConfiguration(request: GetConfigurationRequest, options?: RequestOptions): Promise<GetConfigurationResponseBody>;
    /**
     * Delete an integration configuration
     *
     * @remarks
     * Allows to remove the configuration with the `id` provided in the parameters. The configuration and all of its resources will be removed. This includes Webhooks, LogDrains and Project Env variables.
     */
    deleteConfiguration(request: DeleteConfigurationRequest, options?: RequestOptions): Promise<void>;
}
//# sourceMappingURL=integrations.d.ts.map